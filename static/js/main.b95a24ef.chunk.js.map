{"version":3,"sources":["components/DateTime.js","components/Titles.js","components/Form.js","components/Weather.js","components/Footer.js","App.js","index.js"],"names":["DateTime","props","date","Date","toLocaleDateString","className","format","ticking","timezone","Titles","Form","onSubmit","getWeather","type","name","placeholder","autoComplete","Weather","minutes_with_leading_zeros","a","getMinutes","spanStyle","color","city","country","style","temperature","Math","round","humidity","pressure","sunrise","getHours","sunset","description","error","Footer","marginTop","fontSize","textAlign","textTransform","API_KEY","App","state","undefined","e","preventDefault","target","elements","value","fetch","api_call","json","data","cod","console","log","setState","main","temp","sys","weather","alert","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b95a24ef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Clock from 'react-live-clock';\r\n\r\nconst DateTime = props => {\r\n\r\n  const date = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"date-time\">\r\n      <p>\r\n        {date} {' '}\r\n      </p>\r\n      <Clock\r\n        className=\"live-clock\"\r\n        format={'HH:mm:ss'}\r\n        ticking={true}\r\n        timezone={'Europe/Warsaw'} />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default DateTime;\r\n","import React from \"react\";\r\nimport DateTime from \"./DateTime\";\r\n\r\nconst Titles = () => (\r\n    <div className=\"titles-wrapper\">\r\n        <h1 className=\"app-title\">Weather finder</h1>\r\n        <i className=\"fas fa-wind fa-rotate-90 fa-4x\"></i>\r\n        <p className=\"app-description\">\r\n            Find out current temperature, condtitions and more...\r\n        </p>\r\n        <div>\r\n            <DateTime />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Titles;\r\n","import React from 'react'\r\n\r\nconst Form = props => (\r\n\r\n    <form className=\"search-form\" onSubmit={props.getWeather}>\r\n        <input \r\n        className=\"search-bar\" \r\n        type=\"text\" name=\"city\" \r\n        placeholder=\"Enter the city...\"\r\n        autoComplete=\"off\"\r\n        />\r\n        {/*<input type=\"text\" name=\"country\" placeholder=\"Country...\"/> */}\r\n        <button className=\"search-button\">Get Weather!</button>\r\n    </form>\r\n\r\n);\r\n\r\nexport default Form;\r\n\r\n","import React from 'react'\r\n//import icon1 from './seasons.png';\r\n\r\nconst Weather = (props) => {\r\n\r\n    //Below getting exact day from Date JS \r\n    //let day = date.getDate();\r\n    \r\n    function minutes_with_leading_zeros(a) \r\n    { \r\n      return (a.getMinutes() < 10 ? '0' : '') + a.getMinutes();\r\n    }\r\n    const spanStyle = {color:\"#486860\"};\r\nreturn (\r\n    <div className=\"weather-info-wrapper\">\r\n        {props.city && props.country && <p><span style={spanStyle}>Location:</span> <strong>{props.city}</strong>, {props.country}</p>}\r\n        {props.temperature && <p><span style={spanStyle}>Temperature:</span> <strong>{Math.round(props.temperature - 273)}</strong>°C</p>}\r\n        {props.humidity && <p><span style={spanStyle}>Humidity:</span> <strong>{props.humidity}</strong>%</p>}\r\n        {props.pressure && <p><span style={spanStyle}>Pressure:</span> <strong>{props.pressure}</strong> hPa</p>}\r\n        {props.sunrise && <p>\r\n            <span style={spanStyle}>Sunrise:</span> \r\n            <strong>{new Date ((props.sunrise * 1000)).getHours()}:{minutes_with_leading_zeros(new Date (props.sunrise * 1000))}</strong> CET</p>}\r\n        {props.sunset && <p>\r\n            <span style={spanStyle}>Sunset:</span> \r\n            <strong>{new Date ((props.sunset * 1000)).getHours()}:{minutes_with_leading_zeros(new Date (props.sunset * 1000))}</strong> CET</p>}\r\n        {props.description && <p><span style={spanStyle}>Description:</span> <strong>{props.description}</strong> </p>}\r\n        {props.error && <p style={{color:\"red\"}}><strong>{props.error}</strong></p>}\r\n        {/*{props.description && <img className=\"weather-image-wrapper\"src={icon1} alt=\"logo\" />}*/}\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default Weather;\r\n","import React from 'react'\r\n\r\nconst Footer = props => (\r\n\r\n    <footer>\r\n        <p style={{\r\n            /*position: 'absolute', bottom: '5%', left: '50%', transform:\"translateX(-50%)\",*/\r\n            marginTop: \"100px\",\r\n            color: \"#dedce4\", \r\n            fontSize: \"10px\", textAlign: \"center\", textTransform: \"uppercase\" \r\n            }}>designed by Igor Biedrawa © 2019</p>\r\n    </footer>\r\n\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport Footer from './components/Footer';\n\n/* LINKS:\nAPI: https://home.openweathermap.org/ @biedrawa.igor\ntutorial: https://www.youtube.com/watch?v=204C9yNeOYI\n*/\n\nconst API_KEY = \"3d07ac3e7716f1c5fa32f30e69812237\";\n\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    //const country = e.target.elements.country.value;\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    const data = await api_call.json();\n    if (city && data.cod === 200) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        pressure: data.main.pressure,\n        description: data.weather[0].description,\n        error: ''\n      });\n    } else if (data.cod === \"404\") {\n      this.setState({\n        error: alert(\"City not in our database, sorry...\")\n      })\n    } \n    else {\n      this.setState({\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      pressure: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      description: undefined,\n      error: alert('Please enter a proper city name!')\n    });\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"app-wrapper\">\n        <Titles />\n        <Form getWeather={this.getWeather} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          description={this.state.description}\n          error={this.state.error}\n        />\n        <Footer />\n      </div>\n    );\n  }\n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}